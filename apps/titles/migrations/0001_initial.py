# Generated by Django 4.2 on 2023-05-06 11:15

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Franchises',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('picture', models.ImageField(upload_to='franchises/')),
            ],
        ),
        migrations.CreateModel(
            name='Genres',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('picture', models.ImageField(upload_to='genres/')),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='person_image')),
                ('bio', models.TextField()),
                ('age', models.PositiveIntegerField(default=1)),
                ('birthdate', models.DateField()),
                ('birth_place', models.CharField(max_length=500)),
                ('death_date', models.DateField(blank=True, null=True)),
                ('height', models.PositiveIntegerField(default=100)),
            ],
        ),
        migrations.CreateModel(
            name='Title',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Film', 'Film'), ('Series', 'Series')], max_length=10)),
                ('name', models.CharField(max_length=500)),
                ('description', models.TextField()),
                ('v_poster', models.ImageField(blank=True, null=True, upload_to='title/v_poster/')),
                ('h_poster', models.ImageField(blank=True, null=True, upload_to='title/h_poster/')),
                ('release_date', models.DateField()),
                ('trailer_url', models.URLField()),
                ('budget', models.IntegerField()),
                ('age_limit', models.CharField(max_length=15)),
                ('film_time', models.PositiveIntegerField(blank=True, null=True)),
                ('episodes', models.PositiveIntegerField(blank=True, null=True)),
                ('seasons', models.PositiveIntegerField(blank=True, null=True)),
                ('series_time', models.PositiveIntegerField(blank=True, null=True)),
                ('actors', models.ManyToManyField(related_name='title_actors', to='titles.person')),
                ('country', models.ManyToManyField(related_name='title_country', to='titles.country')),
                ('director', models.ManyToManyField(related_name='title_director', to='titles.person')),
                ('genres', models.ManyToManyField(related_name='title_genres', to='titles.genres')),
            ],
        ),
        migrations.CreateModel(
            name='Reviews',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('title', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_title', to='titles.title')),
            ],
        ),
    ]
